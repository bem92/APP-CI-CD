name: Tests & Coverage

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  SONAR_HOST_URL: https://sonarcloud.io
  SONAR_ORG: bem92
  SONAR_BACKEND_PROJECT_KEY: ${{ vars.SONAR_BACKEND_PROJECT_KEY || 'back-bob-app' }}
  SONAR_FRONTEND_PROJECT_KEY: ${{ vars.SONAR_FRONTEND_PROJECT_KEY || 'front-bob-app' }}

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Run backend tests with coverage
        run: |
          set -euo pipefail
          mvn -B -DskipTests=false \
            org.jacoco:jacoco-maven-plugin:prepare-agent test \
            org.jacoco:jacoco-maven-plugin:report

      - name: Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifacts
          if-no-files-found: ignore
          path: |
            back/target/site/jacoco/**
            back/target/surefire-reports/**/*

      - name: Prepare Sonar PR context
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        id: sonar-context
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "args=-Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.branch=${{ github.head_ref }} -Dsonar.pullrequest.base=${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
          else
            echo "args=" >> "$GITHUB_OUTPUT"
          fi

      - name: SonarCloud Scan (backend)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACK }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.projectKey=${{ env.SONAR_BACKEND_PROJECT_KEY }}
            -Dsonar.projectBaseDir=back
            -Dsonar.sources=src/main
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
            ${{ steps.sonar-context.outputs.args }}

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        env:
          CI: 'true'
          NG_CLI_ANALYTICS: 'false'
        run: |
          set -euo pipefail
          if npm test -- --watch=false --code-coverage --browsers=ChromeHeadless; then
            echo "Angular/Karma coverage generated"
          else
            echo "Fallback to generic coverage"
            npm test -- --coverage
          fi

      - name: Locate lcov report
        id: cov
        run: |
          set -euo pipefail
          if [ -d coverage ]; then
            lcov=$(find coverage -type f -name "lcov.info" -print | head -n 1 || true)
          else
            lcov=""
          fi
          echo "lcov=${lcov}" >> "$GITHUB_OUTPUT"

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          if-no-files-found: ignore
          path: |
            front/coverage/**
            front/test-results/**/*.xml
            front/package.json
            front/angular.json

      - name: Prepare Sonar PR context
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        id: sonar-context
        run: |
          set -euo pipefail
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "args=-Dsonar.pullrequest.key=${{ github.event.pull_request.number }} -Dsonar.pullrequest.branch=${{ github.head_ref }} -Dsonar.pullrequest.base=${{ github.base_ref }}" >> "$GITHUB_OUTPUT"
          else
            echo "args=" >> "$GITHUB_OUTPUT"
          fi

      - name: SonarCloud Scan (frontend)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=${{ env.SONAR_ORG }}
            -Dsonar.projectKey=${{ env.SONAR_FRONTEND_PROJECT_KEY }}
            -Dsonar.projectBaseDir=front
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts,**/*.spec.tsx,**/*.test.tsx
            ${{ steps.cov.outputs.lcov && format('-Dsonar.javascript.lcov.reportPaths={0}', steps.cov.outputs.lcov) || '' }}
            ${{ steps.cov.outputs.lcov && format('-Dsonar.typescript.lcov.reportPaths={0}', steps.cov.outputs.lcov) || '' }}
            ${{ steps.sonar-context.outputs.args }}


